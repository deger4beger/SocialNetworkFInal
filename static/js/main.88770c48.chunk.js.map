{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","redux/profileReducer.ts","redux/messagesReducer.ts","assets/images/userImage.png","components/Users/Users.module.css","api/api.ts","reportWebVitals.js","redux/navbarReducer.ts","redux/usersReducer.ts","redux/authReducer.ts","redux/appReducer.ts","redux/reduxStore.ts","components/Navbar/Friend/Friend.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/News/News.jsx","components/Login/Login.jsx","components/Music/Music.jsx","components/common/Paginator/Paginator.tsx","components/Users/UsersList.jsx","redux/usersSelectors.ts","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Settings/Settings.jsx","redux/authSelectors.ts","components/Header/Header.jsx","App.js","index.js","components/Navbar/Navbar.module.css","components/Login/Login.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validator.js","assets/images/usersLoader.svg","components/common/Preloader/Preloader.jsx","components/Navbar/Friend/Friend.module.css","components/Header/Header.module.css"],"names":["module","exports","Element","input","meta","props","hasError","touched","error","className","s","formControl","ADD_POST","SET_USER_PROFILE","TOGGLE_IS_FETCHING","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","ERROR_MESSAGE","initialState","posts","id","message","likesCount","profile","isFetching","status","errorMessage","addPostActionCreator","postText","type","toggleIsFetching","setStatus","getUserProfile","userId","dispatch","a","profileAPI","data","getStatus","updateStatus","resultCode","savePhoto","file","photos","saveProfile","getState","auth","messages","Promise","reject","profileReducer","state","action","filter","p","postId","SEND_MESSAGE","dialogs","name","sendMessageCreator","messagesReducer","ResultCodes","ResultCodeForCaptcha","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","term","friend","get","then","response","followAPI","follow","post","unfollow","delete","put","photoFile","formData","FormData","append","authAPI","getMyData","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","friends","navbarReducer","users","totalUsersCount","followingInProgress","actions","userID","payload","totalCount","requestUsers","length","items","_followUnfollowFlow","apiMethod","actionCreator","usersReducer","map","u","followed","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","isAuth","captchaUrl","setAuthUserData","Success","url","authReducer","userIDefef","INITIALIZED_SUCCESS","initialized","appReducer","rootReducer","combineReducers","profilePage","messagesPage","navbarPage","usersPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Friend","item","image","Navbar","friendsElements","f","nav","navItems","to","activeClassName","active","big","friendsTitle","connect","News","Input","LoginForm","onSubmit","handleSubmit","form1","placeholder","component","validate","required","checkbox","submitError","src","alt","buttonBlock","button","CaptchaIsRequired","form","Music","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","common","onClick","selectedPage","pageNumber","e","UsersList","small","userPhoto","disabled","some","getpageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","usersSearchFormValidate","values","UsersSearchForm","useSelector","enableReinitialize","initialValues","String","setSubmitting","onFilterChanged","isSubmitting","as","value","Users","useDispatch","history","useHistory","useEffect","parsed","queryString","location","search","substr","actualPage","actualFilter","page","Number","query","pathname","bind","UsersPage","Preloader","Settings","selectIsAuth","selectCurrentUserLogin","Header","Layout","Content","Footer","Sider","span","logo","theme","mode","defaultSelectedKeys","Item","style","backgroundColor","icon","UserOutlined","login_link","SubMenu","Menu","DialogsContainer","React","lazy","ProfileContainer","ChatPage","App","this","initializeApp","padding","margin","width","height","title","LaptopOutlined","NotificationOutlined","minHeight","exact","path","render","Suspense","fallback","textAlign","Component","promise","all","ReactDOM","document","getElementById","maxLenghtCreator","maxLength","preloader"],"mappings":"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","file":"static/js/main.88770c48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3neZD\",\"error\":\"FormsControls_error__2G2LM\"};","import s from \"./FormsControls.module.css\"\r\n\r\n\r\nexport const Element = Element => ({input, meta, ...props}) => {\r\n\tconst hasError = meta.touched && meta.error\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n\t\t\t<div>\r\n\t\t\t\t<Element {...input} {...props} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{ meta.touched && meta.error && <span>{meta.error}</span> }\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import {profileAPI} from \"./../api/api\"\r\nimport { PhotosType, PostType, ProfileType } from '../types/types';\r\n\r\nconst ADD_POST = \"ADD-POST\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\"\r\nconst ERROR_MESSAGE = \"ERROR_MESSAGE\"\r\n\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t\t{id: 1, message: \"Hi, how are you ?\", likesCount: 9},\r\n\t\t\t{id: 2, message: \"It's my first post\", likesCount: 17},\r\n\t\t] as Array<PostType>,\r\n\tprofile: null as ProfileType | null,\r\n\tisFetching: false,\r\n\tstatus: \"\",\r\n\terrorMessage: \"\"\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): initialStateType => {\r\n\tswitch(action.type) {\r\n\t\tcase ADD_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [{id: 5,\r\n\t\t\t\t\t\tmessage: action.postText,\r\n\t\t\t\t\t\tlikesCount: 0}, ...state.posts]\r\n\t\t\t}\r\n\t\tcase SET_USER_PROFILE: \r\n\t\t\treturn {...state, profile: action.profile, errorMessage: \"\"}\t\r\n\t\tcase TOGGLE_IS_FETCHING: \r\n\t\t\treturn {...state, isFetching: action.isFetching}\r\n\t\tcase SET_STATUS: \r\n\t\t\treturn {...state, status: action.status}\t\r\n\t\tcase DELETE_POST:\r\n\t\t\treturn {...state, posts: state.posts.filter( p => p.id != action.postId)}\r\n\t\tcase SAVE_PHOTO_SUCCESS:\r\n\t\t\treturn {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n\t\tcase ERROR_MESSAGE:\r\n\t\t\treturn {...state, errorMessage: action.errorMessage}\t\t\t\t\t\t\t\t\t\r\n\t\tdefault:\r\n\t\t\treturn state\t\t\r\n\t}\r\n}\r\n\r\ntype addPostActionCreatorType = {\r\n\ttype: typeof ADD_POST\r\n\tpostText: string\r\n\r\n\r\n\r\n}\r\ntype setUserProfileType = {\r\n\ttype: typeof SET_USER_PROFILE\r\n\tprofile: ProfileType\r\n}\r\ntype toggleIsFetchingType = {\r\n\ttype: typeof TOGGLE_IS_FETCHING\r\n\tisFetching: boolean}\r\ntype setStatusType = {\r\n\ttype: typeof SET_STATUS\r\n\tstatus: string}\r\ntype deletePostType = {\r\n\ttype: typeof DELETE_POST\r\n\tpostId: number}\r\ntype savePhotoSuccessType = {\r\n\ttype: typeof SAVE_PHOTO_SUCCESS\r\n\tphotos: PhotosType}\r\ntype setErrorMesssage = {\r\n\ttype: typeof ERROR_MESSAGE\r\n\terrorMessage: string}\r\n\r\nexport const addPostActionCreator = (postText: string): addPostActionCreatorType => ({ type: ADD_POST, postText })\r\nexport const setUserProfile = (profile: ProfileType): setUserProfileType => ({ type: SET_USER_PROFILE, profile })\r\nexport const toggleIsFetching = (isFetching: boolean): toggleIsFetchingType => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const setStatus = (status: string): setStatusType => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId: number): deletePostType=> ({ type: DELETE_POST, postId })\r\nexport const savePhotoSuccess = (photos: PhotosType): savePhotoSuccessType => ({ type: SAVE_PHOTO_SUCCESS, photos })\r\nexport const setErrorMesssage = (errorMessage: string): setErrorMesssage => ({ type: ERROR_MESSAGE, errorMessage })\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n\tdispatch(toggleIsFetching(true))\r\n\tlet data = await profileAPI.getUserProfile(userId)\r\n\t\tdispatch(setUserProfile(data))\r\n\t\tdispatch(toggleIsFetching(false))\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n\tlet data = await profileAPI.getStatus(userId)\r\n\t\tdispatch(setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n\tlet data = await profileAPI.updateStatus(status)\r\n\t\tif(data.resultCode === 0) {\r\n\t\t\tdispatch(setStatus(status))\r\n\t\t}\t\t\r\n}\r\n\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n\tlet data = await profileAPI.savePhoto(file)\r\n\t\tif(data.resultCode === 0) {\r\n\t\t\tdispatch(savePhotoSuccess(data.data.photos))\r\n\t\t}\t\t\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n\tconst id = getState().auth.id\r\n\tlet data = await profileAPI.saveProfile(profile)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(getUserProfile(id))\r\n\t} else {\r\n\t\tdispatch(setErrorMesssage(data.messages[0]))\r\n\t\treturn Promise.reject(data.messages[0])\r\n\t}\t\t\r\n}\r\n\r\nexport default profileReducer","const SEND_MESSAGE = \"SEND_MESSAGE\"\r\n\r\ntype DialogType = {\r\n\tid: number\r\n\tname: string\r\n}\r\ntype MessagesType = {\r\n\tid: number\r\n\tmessage: string\r\n}\r\n\r\nlet initialState = {\r\n\tdialogs: [\r\n\t\t{id: 1, name: \"Vlad\"},\r\n\t\t{id: 2, name: \"Dmitry\"},\r\n\t\t{id: 3, name: \"Alexandr\"},\r\n\t\t{id: 4, name: \"Danil\"},\r\n\t\t{id: 5, name: \"Bakhyt\"},\r\n\t\t{id: 6, name: \"Talgat\"}\r\n\t] as Array<DialogType>,\r\n\r\n\tmessages: [\r\n\t\t{id: 1, message: \"Hi\"},\r\n\t\t{id: 2, message: \"How are you doing ?\"},\r\n\t\t{id: 3, message: \"Who are you ?\"},\r\n\t\t{id: 4, message: \"Yo\"},\r\n\t\t{id: 5, message: \"Yo\"}\r\n\t] as Array<MessagesType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const messagesReducer = (state = initialState, action: any): InitialStateType => {\r\n\t\r\n\tswitch(action.type) {\r\n\t\tcase SEND_MESSAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages: [...state.messages, {id: 6, message: action.data}]\r\n\t\t\t}\r\n\t\tdefault: \r\n\t\t\treturn state\t\r\n\t}\t\r\n}\r\n\r\ntype sendMessageCreatorActionType = {\r\n\ttype: typeof SEND_MESSAGE,\r\n\tdata: string\r\n}\r\n\r\nexport const sendMessageCreator = (data: string): sendMessageCreatorActionType => ({ type: SEND_MESSAGE, data })\r\n\r\nexport default messagesReducer","export default __webpack_public_path__ + \"static/media/userImage.04576ee2.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2MbTd\"};","import axios from \"axios\"\r\nimport { ProfileType } from '../types/types';\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\theaders: {\r\n\t\t\"API-KEY\": \"2797f993-0854-48ee-b676-f11fed5bb0dd\"\r\n\t}\r\n})\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage: number, pageSize: number, term: string = \"\", friend: null | boolean = null) {\r\n\treturn instance.get(`users?\r\n\t\t\t\tpage=${currentPage}\r\n\t\t\t\t&count=${pageSize}&term=${term}`\r\n\t\t\t\t + (friend === null ? \"\" : `&friend=${friend}`)).then(response => response.data)\r\n\t}\r\n}\r\n\r\nexport const followAPI = {\r\n\t\r\n\tfollow(id: number) {\r\n\t\treturn instance.post(`follow/${id}`)\r\n\t\t\t.then(response => response.data)\r\n\t},\r\n\r\n\tunfollow(id: number) {\r\n\t\treturn instance.delete(`follow/${id}`)\r\n\t\t\t.then(response => response.data)\r\n\t}\r\n}\r\n\r\nexport const profileAPI = {\r\n\tgetUserProfile(userId: number) {\r\n\t\treturn instance.get(`profile/` + userId)\r\n\t\t\t.then(response => response.data)\r\n\t},\r\n\r\n\tgetStatus(userId: number) {\r\n\t\treturn instance.get(`profile/status/` + userId)\r\n\t\t\t.then(response => response.data)\r\n\t},\r\n\r\n\tupdateStatus(status: string) {\r\n\t\treturn instance.put(`profile/status`, { status })\r\n\t\t\t.then(response => response.data)\r\n\t},\r\n\tsavePhoto(photoFile: any) {\r\n\t\tconst formData = new FormData()\r\n\t\tformData.append(\"image\", photoFile)\r\n\t\treturn instance.put(`profile/photo`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"multipart/form-data\"\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(response => response.data)\r\n\t},\r\n\tsaveProfile(profile: ProfileType) {\r\n\t\treturn instance.put(\"profile\", profile)\r\n\t\t\t.then(response => response.data)\r\n\t}\r\n}\r\n\r\nexport enum ResultCodes {\r\n\tSuccess = 0,\r\n\tError = 1,\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n\tCaptchaIsRequired = 10\r\n}\r\n\r\ntype getMyDataResponseType = {\r\n\tdata: { id: number, email: string, login: string}\r\n\tresultCode: ResultCodes\r\n\tmessages: Array<string>\r\n}\r\n\r\ntype loginType = {\r\n\tdata: { userId: number }\r\n\tresultCode: ResultCodes | ResultCodeForCaptcha\r\n\tmessages: Array<string>\r\n}\r\n\r\nexport const authAPI = {\r\n\tgetMyData() {\r\n\t\treturn instance.get<getMyDataResponseType>(`auth/me`)\r\n\t\t\t.then(response => response.data)\r\n\t},\r\n\r\n\tlogin(email: string, password: string, rememberMe=false, captcha: null | string = null) {\r\n\t\treturn instance.post<loginType>(`auth/login`, { email, password, rememberMe, captcha })\r\n\t\t\t.then(response => response.data)\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete(`auth/login`)\r\n\t\t\t.then(response => response.data)\r\n\t}\r\n}\r\n\r\nexport const securityAPI = {\r\n\tgetCaptchaUrl() {\r\n\t\treturn instance.get(`/security/get-captcha-url`)\r\n\t\t\t.then(response => response.data)\r\n\t}\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\ntype FriendsType = {\r\n\tname: string\r\n}\r\n\r\nlet initialState = {\r\n\tfriends: [\r\n\t\t{name: \"Vlad\"},\r\n\t\t{name: \"Dmitry\"},\r\n\t\t{name: \"Alexander\"},\r\n\t\t{name: \"Danil\"}\r\n\t] as Array<FriendsType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst navbarReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n\r\n\treturn state\r\n}\r\n\r\nexport default navbarReducer","import {usersAPI, followAPI} from \"./../api/api\"\r\nimport { UserType } from '../types/types';\r\nimport { AppStateType, InferActionsTypes } from './reduxStore';\r\nimport { Dispatch } from 'redux';\r\nimport { ThunkAction } from \"redux-thunk\"\r\n\r\n// const TOGGLE_FOLLOW= \"TOGGLE_FOLLOW\"\r\n// const SET_USERS = \"SET_USERS\"\r\n// const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\n// const SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\n// const TOGGLE_IS_FETCHGING = \"TOGGLE_IS_FETCHGING\"\r\n// const TOGGLE_FOLLOWING_IN_PROGRESS = \"TOGGLE_FOLLOWING_IN_PROGRESS\"\r\n\r\n\r\nlet initialState = {\r\n\tusers: [\t] as Array<UserType>,\r\n\tpageSize: 3,\r\n\ttotalUsersCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: true,\r\n\tfollowingInProgress: [] as Array<number>, // array of user's ids\r\n\tfilter: {\r\n\t\tterm: \"\",\r\n\t\tfriend: null as null | boolean\r\n\t}\r\n}\r\n\r\ntype initalStateType = typeof initialState\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): initalStateType => {\r\n\t\r\n\tswitch(action.type) {\r\n\t\tcase \"TOGGLE_FOLLOW\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userID) {\r\n\t\t\t\t\t\treturn {...u, followed: !u.followed}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u\r\n\t\t\t\t})\r\n\t\t\t}\t\r\n\t\tcase \"SET_USERS\":\r\n\t\t\treturn { ...state, users: action.users}\r\n\t\tcase \"SET_CURRENT_PAGE\":\r\n\t\t\treturn { ...state, currentPage: action.currentPage}\t\r\n\t\tcase \"SET_FILTER\": \r\n\t\t\treturn {...state, filter: action.payload}\t\r\n\t\tcase \"SET_TOTAL_USERS_COUNT\":\r\n\t\t\treturn { ...state, totalUsersCount: action.totalCount}\t\r\n\t\tcase \"TOGGLE_IS_FETCHGING\":\r\n\t\t\treturn {...state, isFetching: action.isFetching}\r\n\t\tcase \"TOGGLE_FOLLOWING_IN_PROGRESS\":\r\n\t\t\treturn {...state,\r\n\t\t\t\t\tfollowingInProgress: action.isFetching \r\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\r\n\t\t\t\t\t: state.followingInProgress.filter(id => id != action.userId)}\r\n\t\t// case \"FAKE\":\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\tfake: state.fake + 1\r\n\t\t// \t}\t\t\t\t\t\t\t\t\r\n\t\tdefault:\r\n\t\t\treturn state\t\t\r\n\t}\r\n}\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nexport const actions = {\r\n\ttoggleFollow: (userID: number) => ({ type: \"TOGGLE_FOLLOW\", userID } as const),\r\n\tsetUsers: (users: Array<UserType>) => ({ type: \"SET_USERS\", users } as const),\r\n\tsetCurrentPage: (currentPage: number) => ({ type: \"SET_CURRENT_PAGE\", currentPage} as const),\r\n\tsetFilter: (filter: FilterType) => ({ type: \"SET_FILTER\", payload: filter} as const),\r\n\tsetTotalUsersCount: (totalCount: number) =>\r\n\t\t({ type: \"SET_TOTAL_USERS_COUNT\", totalCount} as const),\r\n\ttoggleIsFetching: (isFetching: boolean) =>\r\n\t\t({ type: \"TOGGLE_IS_FETCHGING\", isFetching } as const),\r\n\ttoggleIsFollowingProgress: (isFetching: boolean, userId: number) =>\r\n\t\t({ type: \"TOGGLE_FOLLOWING_IN_PROGRESS\", isFetching, userId } as const)\r\n}\r\n\r\n\r\n\r\ntype StateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionsTypes>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number, filter: FilterType, length = 0) =>\r\n\tasync (dispatch: DispatchType, getState: StateType) => {\t\r\n\t\tif (length === 0) {\r\n\t\t\tdispatch(actions.setCurrentPage(currentPage))\r\n\t\t\tdispatch(actions.toggleIsFetching(true))\r\n\t\t\tdispatch(actions.setFilter(filter))\r\n\t\t\tlet data = await usersAPI.getUsers(currentPage, pageSize, filter.term, filter.friend)\r\n\t\t\tdispatch(actions.toggleIsFetching(false))\r\n\t\t\tdispatch(actions.setUsers(data.items))\r\n\t\t\tdispatch(actions.setTotalUsersCount(data.totalCount))\r\n\t\t}\t\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: DispatchType, userId: number, apiMethod: any,\r\n\tactionCreator: (userId: number) => ActionsTypes) => {\r\n\t\tdispatch(actions.toggleIsFollowingProgress(true, userId))\r\n\t\tlet data = await apiMethod(userId)\r\n\t\tif (data.resultCode === 0) {\r\n\t\t\tdispatch(actionCreator(userId))\r\n\t\t}\r\n\t\tdispatch(actions.toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\n\r\nexport const follow = (userId: number): ThunkType => async (dispatch, getState) => {\r\n\t_followUnfollowFlow(dispatch, userId, followAPI.follow.bind(followAPI), actions.toggleFollow)\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => async (dispatch) => {\r\n\t_followUnfollowFlow(dispatch, userId, followAPI.unfollow.bind(followAPI), actions.toggleFollow)\r\n}\r\n\r\nexport type FilterType = typeof initialState.filter\r\nexport default usersReducer","import {authAPI, securityAPI} from \"./../api/api\"\r\nimport { ResultCodeForCaptcha, ResultCodes } from '../api/api';\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst GET_CAPTCHA_URL_SUCCESS = \"GET_CAPTCHA_URL_SUCCESS\"\r\n\r\n// export type InitialStateType2 = {\r\n// \tid: number | null,\r\n// \tlogin: string | null\r\n// \temail: string | null,\r\n// \tisAuth: boolean,\r\n// \terrorMessage: string,\r\n// \tcaptchaUrl: string | null\r\n// }\r\n\r\nlet initialState = {\r\n\tid: null as number | null,\r\n\tlogin: null as string | null,\r\n\temail: null as string | null,\r\n\tisAuth: false,\r\n\terrorMessage: [] as Array<string>,\r\n\tcaptchaUrl: null as string | null\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n\t\r\n\tswitch(action.type) {\r\n\t\tcase SET_USER_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tuserIDefef: 21\r\n\t\t\t}\t\r\n\t\tcase GET_CAPTCHA_URL_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcaptchaUrl: action.url\r\n\t\t\t}\t\r\n\t\tdefault:\r\n\t\t\treturn state\t\t\r\n\t}\r\n}\r\n\r\ntype SetAuthUserDataActionPayloadType = {\r\n\tid: number | null\r\n\temail: string | null\r\n\tlogin: string | null\r\n\tisAuth: boolean\r\n\terrorMessage: Array<string>\r\n\tcaptchaUrl: string | null\r\n}\r\n\r\ntype SetAuthUserDataActionType = {\r\n\ttype: typeof SET_USER_DATA\r\n\tpayload: SetAuthUserDataActionPayloadType\r\n}\r\n\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null,\r\n\tisAuth: boolean, errorMessage: Array<string>, captchaUrl: string | null): SetAuthUserDataActionType =>\r\n\t ({ type: SET_USER_DATA, payload: {id, email, login, isAuth, errorMessage, captchaUrl} })\r\n\r\n\r\ntype getCaptchaUrlSuccessActionType = {\r\n\ttype: typeof GET_CAPTCHA_URL_SUCCESS\r\n\turl: string\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (url: string): getCaptchaUrlSuccessActionType =>\r\n\t ({ type: GET_CAPTCHA_URL_SUCCESS, url})\r\n\r\n\r\nexport const getMyData = () => async (dispatch: any) => {\r\n\tlet data = await authAPI.getMyData()\r\n\t\tif(data.resultCode === ResultCodes.Success) {\r\n\t\t\tlet {id, email, login} = data.data\r\n\t\t\tdispatch(setAuthUserData(id, email, login, true, [], null))\r\n\t}\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) =>\r\n\tasync (dispatch: any) => {\r\n\tlet data = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n\t\tif (data.resultCode === ResultCodes.Success) {\r\n\t\t\tdispatch(getMyData())\r\n\t\t} else {\r\n\t\t\tdispatch(setAuthUserData(null, null, null, false, data.messages, null))\r\n\t\t\tif (data.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n\t\t\t\tdispatch(getCaptchaUrl())\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\t\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n\tlet data = await securityAPI.getCaptchaUrl()\r\n\tdispatch(getCaptchaUrlSuccess(data.url))\r\n\t\t\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n\tlet data = await authAPI.logout()\r\n\t\tif(data.resultCode === 0) {\r\n\t\t\tdispatch(setAuthUserData(null, null, null, false, [], null))\r\n\t}\t\r\n}\r\n\r\nexport default authReducer","import {authAPI} from \"./../api/api\"\r\nimport {getMyData} from \"./authReducer\"\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\"\r\n\r\nexport type InitialStateType = {\r\n\tinitialized: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n\tinitialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n\t\r\n\tswitch(action.type) {\r\n\t\tcase INITIALIZED_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true\r\n\t\t\t}\t\r\n\t\tdefault:\r\n\t\t\treturn state\t\t\r\n\t}\r\n}\r\n\r\ntype initializedSuccessActionType = {\r\n\ttype: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): initializedSuccessActionType => ({ type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => {\r\n\t\r\n\treturn (dispatch: any) => {\r\n\t\tlet promise = dispatch(getMyData())\r\n\t\tPromise.all([promise]).\r\n\t\t\tthen(() => {\r\n\t\t\t\tdispatch(initializedSuccess())\r\n\t\t})\r\n\t}\t\r\n}\r\n\r\nexport default appReducer","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\"  \r\nimport profileReducer from \"./profileReducer\"\r\nimport messagesReducer from \"./messagesReducer\"\r\nimport navbarReducer from \"./navbarReducer\"\r\nimport usersReducer from \"./usersReducer\"\r\nimport authReducer from \"./authReducer\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport appReducer from \"./appReducer\"\r\n// import { reducer as formReducer } from \"redux-form\"\r\n\r\nlet rootReducer = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tmessagesPage: messagesReducer,\r\n\tnavbarPage: navbarReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tapp: appReducer\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\ntype PropertiesTypes<T> = T extends {[key: string]:  infer U} ? U : never\r\nexport type InferActionsTypes<T extends {[key: string]:  (...args: any[]) => any}> = ReturnType<PropertiesTypes<T>>\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","import s from \"./Friend.module.css\"\r\n\r\n\r\nfunction Friend(props) {\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<div className={s.image}></div>\r\n\t\t\t<div className={s.name}>{props.name}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Friend","import s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport Friend from \"./Friend/Friend\"\r\n\r\n\r\nfunction Navbar(props) {\r\n\t\t\r\n\tlet friendsElements = props.navbarPage.friends\r\n\t\t.map( f => <Friend name={f.name} />)\r\n\r\n\treturn (\r\n\t<nav className={s.nav}>\r\n\t  <div className={s.navItems}>\r\n        <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></div>\r\n        <div className={s.item}><NavLink to=\"/messages\" activeClassName={s.active}>Messages</NavLink></div>\r\n        <div className={s.item}><NavLink to=\"/news\" activeClassName={s.active}>News</NavLink></div>\r\n        <div className={s.item}><NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink></div>\r\n        <div className={s.item  + \" \" + s.big}><NavLink to=\"/users\" activeClassName={s.active}>Find users</NavLink></div>\r\n        <div className={s.item  + \" \" + s.big}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></div>\r\n    </div>\t\r\n  \t<div className={s.friendsTitle}>\r\n  \t\t<h2>Friends</h2>\r\n      <div className={s.friends}>        \r\n  \t\t  {friendsElements}\r\n      </div>\r\n  \t</div>\r\n\r\n  </nav>\r\n      )\r\n}\r\n\r\nexport default Navbar","import Navbar from \"./Navbar\"\r\nimport {connect} from \"react-redux\"\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    navbarPage: state.navbarPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {}\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\n\r\nexport default NavbarContainer","import s from \"./News.module.css\"\r\n\r\n\r\nfunction News(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tNews\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default News","// import s from \"./News.module.css\"\r\nimport {Form, Field} from \"react-final-form\"\r\nimport {Element} from \"../common/FormsControls/FormsControls\"\r\nimport {required} from \"../../utils/validators/validator\"\r\nimport s from \"./Login.module.css\"\r\nimport {login} from \"../../redux/authReducer\"\r\nimport {connect} from \"react-redux\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport { FORM_ERROR } from 'final-form'\r\n\r\nconst Input = Element(\"input\")\r\n\r\nfunction LoginForm(props) {\r\n\treturn (\t\r\n\t\t<Form\r\n\t\tonSubmit={props.onSubmit}>\r\n\t\t\t{({ handleSubmit }) => (\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<div className={s.form1}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Field placeholder={\"Login\"} name={\"email\"} className={s.input}\r\n\t\t\t\t\t\t\t\tcomponent={Input} validate={required}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Field placeholder={\"Password\"} name={\"password\"} className={s.input}\r\n\t\t\t\t\t\t\t\tcomponent={Input}validate={required} type=\"password\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={s.checkbox}>\r\n\t\t\t\t\t\t\t<Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/> remember me\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{props.errorMessage && <div className={s.submitError}>{props.errorMessage}</div>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{ props.captchaUrl && <img src={props.captchaUrl} alt=\"\" className={s.captcha}/> }\r\n\t\t\t\t\t\t\t{ props.captchaUrl && <Field placeholder={\"Symbols from image\"} name={\"captcha\"} \r\n\t\t\t\t\t\t\t\tclassName={s.input} component={Input} validate={required} /> }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={s.buttonBlock}>\r\n\t\t\t\t\t\t\t<button className={s.button}>Login</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nfunction Login(props) {\r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n\t}\r\n\r\n\tif (props.isAuth) {\r\n\t\treturn <Redirect to=\"/profile\" />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.form}>\r\n\t\t\t<h1>Login</h1>\r\n\t\t\t<LoginForm onSubmit={onSubmit} errorMessage={props.errorMessage} captchaUrl={props.captchaUrl}/>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcaptchaUrl: state.auth.captchaUrl,\r\n\tisAuth: state.auth.isAuth,\r\n\terrorMessage: state.auth.errorMessage\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import s from \"./Music.module.css\"\r\n\r\n\r\nfunction Music(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tMusic\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Music","import s from \"./Paginator.module.css\"\r\nimport React, {useState} from \"react\"\r\n\r\ntype Props = {\r\n\ttotalUsersCount: number\r\n\tpageSize: number \r\n\tcurrentPage: number\r\n\tonPageChanged: (pageNumber: number) => void\r\n\tportionSize: number\r\n}\r\n\r\nconst Paginator: React.FC<Props> = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize}) => {\r\n\r\n\tlet pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n\tlet pages: Array<number> = [] \r\n\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i)\r\n\t}\r\n\r\n\tlet portionCount = Math.ceil(pagesCount / portionSize)\r\n\tlet [portionNumber, setPortionNumber] = useState(1)\r\n\tlet leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n\tlet rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\treturn (\r\n\t<div className={s.common}>\r\n\t\t<div>\r\n\t\t\t{ portionNumber > 1 &&\r\n\t\t\t<button onClick={ () => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t{pages\r\n\t\t\t\t.filter(p => p>= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n\t\t\t\t.map( p => {\r\n\t\t\t\treturn <span className={currentPage === p ?\r\n\t\t\t\t\ts.selectedPage + \" \" + s.pageNumber : s.pageNumber} \r\n\t\t\t\t\tkey={p}\r\n\t\t\t\t\tonClick={ (e) => {onPageChanged(p) }}>{p}</span>\r\n\t\t\t})}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t{ portionCount > portionNumber &&\r\n\t\t\t<button onClick={ () => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n\t\t</div>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default Paginator","import {NavLink} from \"react-router-dom\"\r\nimport userPhoto from \"../../assets/images/userImage.png\"\r\nimport s from \"./Users.module.css\"\r\n\r\nlet UsersList = (props) => {\r\n\treturn (\t\r\n\t<div>\r\n\t\t{\r\n\t\tprops.users.map( u => <div key={u.id}>\t\t\r\n\t\t\t<span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<NavLink to={\"/profile/\" + u.id}>\r\n\t\t\t\t\t<img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n\t\t\t\t\t\t className={s.userPhoto}/>\r\n\t\t\t\t\t</NavLink>\t \r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button disabled={props.followingInProgress.some(id => id === u.id)} onClick={ () => {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tu.followed ? props.unfollow(u.id)\r\n\t\t\t\t\t\t: props.follow(u.id)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{u.followed ? \"Unfollow\" : \"Follow\"}\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<div>{u.name}</div>\r\n\t\t\t\t\t<div>{u.status}</div>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<div>{\"u.location.country\"}</div>\r\n\t\t\t\t\t<div>{\"u.location.city\"}</div>\r\n\t\t\t\t</span>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t</div>\t\r\n\t)\r\n}\r\n\r\nexport default UsersList","import {createSelector} from \"reselect\"\r\nimport { AppStateType } from './reduxStore';\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n\treturn state.usersPage.users\r\n}\r\n\r\n// export const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n// \treturn users.filter(u => true)\r\n// })\r\n\r\n\r\nexport const getpageSize = (state: AppStateType) => {\r\n\treturn state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n\treturn state.usersPage.totalUsersCount\r\n}\t\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n\treturn state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n\treturn state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n\treturn state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n\treturn state.usersPage.filter\r\n}\r\n\r\n","import { Field, Form, Formik } from 'formik';\r\nimport { FilterType } from '../../redux/usersReducer';\r\nimport React from \"react\"\r\nimport { getUsersFilter } from '../../redux/usersSelectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n         const errors = {};   \r\n         return errors\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\ntype Friend = \"null\" | \"true\" | \"false\"\r\ntype FormType = {\r\n  term: string\r\n  friend: Friend\r\n}\r\n\r\nconst UsersSearchForm: React.FC<PropsType> = (props) => {\r\n\r\n  const submit = (values: FormType, { setSubmitting }: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n            const filter: FilterType = {\r\n              term: values.term,\r\n              friend: values.friend === \"null\" ? null : values.friend === \"true\" ? true : false\r\n            }\r\n            props.onFilterChanged(filter)\r\n            setSubmitting(false)\r\n      }\r\n  const filter = useSelector(getUsersFilter)    \r\n\r\n  return <div>\r\n    <Formik\r\n       enableReinitialize={true}\r\n       initialValues={{ term: filter.term, friend: String(filter.friend) as Friend }}\r\n       validate={usersSearchFormValidate}\r\n       onSubmit={submit}\r\n     >\r\n       {({ isSubmitting }) => (\r\n         <Form>\r\n           <Field type=\"text\" name=\"term\" />\r\n           <Field name=\"friend\" as=\"select\">\r\n             <option value=\"null\">All</option>\r\n             <option value=\"true\">Only followed</option>\r\n             <option value=\"false\">Only unfollowed</option>\r\n           </Field>\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Find\r\n           </button>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n    \r\n  </div>\r\n}\r\n\r\nexport default UsersSearchForm","import s from \"./Users.module.css\"\r\nimport Paginator from \"../common/Paginator/Paginator\"\r\nimport { UserType } from '../../types/types';\r\nimport React, { useEffect } from \"react\"\r\nimport UsersList from './UsersList';\r\nimport UsersSearchForm from './UsersSearchForm';\r\nimport { FilterType, follow, requestUsers, unfollow } from '../../redux/usersReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentPage, getFollowingInProgress, getTotalUsersCount,\r\n\tgetUsers, getUsersFilter, getpageSize } from '../../redux/usersSelectors';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as queryString from \"querystring\"\r\n\r\ntype Props = {}\r\ntype QueryParamsType = {term?: string, page?: string, friend?: string}\r\n\r\n\r\nexport const Users: React.FC<Props> = (props) => {\r\n\r\n\tconst totalUsersCount = useSelector(getTotalUsersCount)   \r\n\tconst pageSize = useSelector(getpageSize) \r\n\tconst currentPage = useSelector(getCurrentPage)  \r\n\tconst filter = useSelector(getUsersFilter)\r\n\tconst users = useSelector(getUsers)\r\n\tconst followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n\tconst dispatch = useDispatch() \r\n\tconst history = useHistory()\r\n\r\n\tuseEffect( () => {\r\n\t\tconst parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n\t\tlet actualPage = currentPage\r\n\t\tlet actualFilter = filter\r\n\r\n\t\tif (!!parsed.page) actualPage = Number(parsed.page)\r\n\t\tif (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n\t\tswitch(parsed.friend) {\r\n\t\t\tcase \"null\":\r\n\t\t\t\tactualFilter = {...actualFilter, friend: null}\r\n\t\t\t\tbreak\r\n\t\t\tcase \"true\":\r\n\t\t\t\tactualFilter = {...actualFilter, friend: true}\r\n\t\t\t\tbreak\r\n\t\t\tcase \"false\":\r\n\t\t\t\tactualFilter = {...actualFilter, friend: false}\r\n\t\t\t\tbreak\t\t\r\n\t\t} \t\r\n\r\n\t\tdispatch(requestUsers(actualPage, pageSize, actualFilter,\r\n\t\tusers.length))\r\n\t}, [])\r\n\t\r\n\tuseEffect( () => {\r\n\t\tconst query: QueryParamsType = {}\r\n\r\n\t\tif (!!filter.term) query.term = filter.term\r\n\t\tif (filter.friend !== null) query.friend = String(filter.friend)\r\n\t\tif (currentPage !== 1) query.page = String(currentPage)\r\n\r\n\t\thistory.push({\r\n\t\t\tpathname: \"/users\",\r\n\t\t\tsearch: queryString.stringify(query)\r\n\t\t})\r\n\r\n\t}, [filter, currentPage])\r\n\r\n\r\n\tconst onPageChanged = (pageNumber: number) => {\r\n\t\tdispatch(requestUsers(pageNumber, pageSize, filter))\r\n\t}  \r\n\r\n\tconst onFilterChanged = (filter: FilterType) => {\r\n\t\tdispatch(requestUsers(1, pageSize, filter))\r\n\t}\r\n\r\n\tconst doFollow = (userId: number) => {\r\n\t\tdispatch(follow(userId))\r\n\t}\r\n\r\n\tconst doUnfollow = (userId: number) => {\r\n\t\tdispatch(unfollow(userId))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n\t\t\t<Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n\t\t\t\ttotalUsersCount={totalUsersCount} pageSize={pageSize}\r\n\t\t\t\tportionSize={10} />\r\n\r\n\t\t\t<UsersList users={users} followingInProgress={followingInProgress}\r\n\t\t\t\tfollow={doFollow} unfollow={doUnfollow} />\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useSelector } from \"react-redux\"\r\nimport {Users} from \"./Users\"\r\nimport React from \"react\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\n\r\n\r\nimport {getIsFetching} from \"../../redux/usersSelectors\"\r\n\r\n\r\ntype UsersPagePropsType = {\r\n\r\n}\r\n\r\nexport const UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n\tconst isFetching = useSelector(getIsFetching)\r\n\r\n\treturn <div>\r\n\t\t{isFetching ? <Preloader /> : null }\r\n\t\t<Users />\t\t\r\n\t</div>\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n// \treturn {\r\n// \t\ttoggleFollow: (userID) => {\r\n// \t\t\tdispatch(toggleFollowAC(userID))\r\n// \t\t},\t\t\r\n// \t\tsetUsers: (users) => {\r\n// \t\t\tdispatch(setUsersAC(users))\r\n// \t\t},\r\n// \t\tsetCurrentPage: (pageNumber) => {\r\n// \t\t\tdispatch(setCurrentPageAC(pageNumber))\r\n// \t\t},\r\n// \t\tsetTotalUsersCount: (totalCount) => {\r\n// \t\t\tdispatch(setTotalUsersCountAC(totalCount))\r\n// \t\t},\r\n// \t\ttoggleIsFetching: (isFetching) => {\r\n// \t\t\tdispatch(toggleIsFetchingAC(isFetching))\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\n","import s from \"./Settings.module.css\"\r\n\r\n\r\nfunction Settings(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tSettings\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Settings","import {createSelector} from \"reselect\"\r\nimport { AppStateType } from './reduxStore';\r\n\r\nexport const selectIsAuth = (state: AppStateType) => {\r\n\treturn state.auth.isAuth\r\n}\r\n\r\nexport const selectCurrentUserLogin = (state: AppStateType) => {\r\n\treturn state.auth.login\r\n}\r\n\r\n\r\n\r\n","import s from \"./Header.module.css\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { Avatar, Button, Col, Layout, Menu, Row } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentUserLogin, selectIsAuth } from '../../redux/authSelectors';\r\nimport { logout } from '../../redux/authReducer';\r\n\r\n// если 2 класса то в класс нейм: {`${s.item} ${s.active}`}\r\n\r\nfunction Header(props) {\r\n\r\n    const { Header, Content, Footer, Sider } = Layout;\r\n    \r\n    const isAuth = useSelector(selectIsAuth)\r\n    const login = useSelector(selectCurrentUserLogin)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n\r\n      <Header className=\"header\">\r\n          <Row>\r\n              <Col span={4}>\r\n                  <img src=\"https://riki.dotabuff.com/t/l/jGcY67ky8a.png\" alt=\"logo\" className={s.logo}/>\r\n              </Col>\r\n              <Col span={14}>\r\n                  <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                      <Menu.Item key=\"1\"><Link to=\"/users\">Find Users</Link></Menu.Item>\r\n                  </Menu>\r\n              </Col>\r\n              <Col span={6}>                 \r\n                  {isAuth ? \r\n                    <div>\r\n                        <Avatar style={{ backgroundColor: '#87d068' }} icon={<UserOutlined />} />\r\n                        <span className={s.login}>{login}</span>\r\n                        <Button onClick={logoutCallback}>Log out</Button>\r\n                    </div>    \r\n                        : <Link to={`/login`} className={s.login_link}>Login</Link>}\r\n              </Col>\r\n          </Row>                  \r\n      </Header>\r\n    )\r\n\r\n}\r\n\r\nexport default Header","import './App.css';\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\"\nimport News from \"./components/News/News\"\nimport Login from \"./components/Login/Login\"\nimport Music from \"./components/Music/Music\"\nimport {UsersPage} from \"./components/Users/UsersContainer\"\nimport Settings from \"./components/Settings/Settings\"\nimport { Link, Route, Switch, Redirect} from \"react-router-dom\"\nimport React from \"react\";\nimport {initializeApp} from \"./redux/appReducer\"\nimport {connect} from \"react-redux\"\nimport Preloader from \"./components/common/Preloader/Preloader\"\nimport 'antd/dist/antd.css'\nimport { Avatar, Button, Col, Row } from 'antd';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nimport Header from './components/Header/Header';\n\nconst { SubMenu } = Menu;\nconst { Content, Footer, Sider } = Layout;\n\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\nconst ChatPage = React.lazy(() => import('./components/ChatPage/ChatPage'))\n\nclass App extends React.Component {\n    \n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <div style={{textAlign: \"center\"}}><Preloader /></div>\n        }\n\n\n        return (\n            <Layout>\n                <Header />\n                <Content style={{ padding: '0 50px' }}>\n                  <Breadcrumb style={{ margin: '16px 0' }}>\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\n                    <Breadcrumb.Item>List</Breadcrumb.Item>\n                    <Breadcrumb.Item>App</Breadcrumb.Item>\n                  </Breadcrumb>\n                  <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                    <Sider className=\"site-layout-background\" width={200}>\n                      <Menu\n                        mode=\"inline\"\n                        defaultSelectedKeys={['1']}\n                        // defaultOpenKeys={['sub1']}\n                        style={{ height: '100%' }}\n                      >\n                        <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Profile\">\n                          <Menu.Item key=\"1\"><Link to=\"/profile\">Profile</Link></Menu.Item>\n                          <Menu.Item key=\"2\"><Link to=\"/messages\">Messages</Link></Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Users\">\n                          <Menu.Item key=\"5\"><Link to=\"/users\">Find Users</Link></Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"Media\">\n                          <Menu.Item key=\"9\"><Link to=\"/chat\">Chat</Link></Menu.Item>\n                        </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                        <Switch>\n                            <Route exact path=\"/\" render={() =>\n                                <Redirect to={\"/profile\"}/>}/>\n                            <Route path=\"/profile/:userId?\" render={() =>\n                                <React.Suspense fallback={<div>Загрузка...</div>}>\n                                    <ProfileContainer />\n                                </React.Suspense>}/>\n                            <Route path=\"/messages\" render={() =>                  \n                                <React.Suspense fallback={<div>Загрузка...</div>}>\n                                    <DialogsContainer/>\n                                </React.Suspense>}/>\n                            <Route path=\"/news\" render={() =>\n                                <News/>}/>\n                            <Route path=\"/music\" render={() =>\n                                <Music/>}/>\n                            <Route path=\"/users\" render={() =>\n                                <UsersPage/>}/>\n                            <Route path=\"/settings\" render={() =>\n                                <Settings/>}/>  \n                            <Route path=\"/chat\" render={() =>                  \n                                <React.Suspense fallback={<div>Загрузка...</div>}>\n                                    <ChatPage/>\n                                </React.Suspense>}/>      \n                            <Route path=\"/login\" render={() =>\n                                <Login />}/>    \n                            <Route path=\"*\" render={() =>\n                                <div>404 NOT FOUND</div>}/> \n                        </Switch>    \n                    </Content>\n                  </Layout>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>React first steps ©2020 Created by deger_beger</Footer>\n            </Layout>\n        )    \n        // )\n        // return (\n        //     <div className=\"app-wrapper\">\n        //         <HeaderContainer />\n        //         <NavbarContainer />\n        //         <div className=\"app-wrapper-content\">\n        //             <Switch>\n        //                 <Route exact path=\"/\" render={() =>\n        //                     <Redirect to={\"/profile\"}/>}/>\n        //                 <Route path=\"/profile/:userId?\" render={() =>\n        //                     <React.Suspense fallback={<div>Загрузка...</div>}>\n        //                         <ProfileContainer />\n        //                     </React.Suspense>}/>\n        //                 <Route path=\"/messages\" render={() =>                  \n        //                     <React.Suspense fallback={<div>Загрузка...</div>}>\n        //                         <DialogsContainer/>\n        //                     </React.Suspense>}/>\n        //                 <Route path=\"/news\" render={() =>\n        //                     <News/>}/>\n        //                 <Route path=\"/music\" render={() =>\n        //                     <Music/>}/>\n        //                 <Route path=\"/users\" render={() =>\n        //                     <UsersPage/>}/>\n        //                 <Route path=\"/settings\" render={() =>\n        //                     <Settings/>}/>\n        //                 <Route path=\"/login\" render={() =>\n        //                     <Login />}/>    \n        //                 <Route path=\"*\" render={() =>\n        //                     <div>404 NOT FOUND</div>}/> \n        //             </Switch>      \n        //         </div>\n        //     </div>\n        // );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {initializeApp})(App)\n\n","import reportWebVitals from './reportWebVitals'\nimport store from \"./redux/reduxStore\"\nimport React from 'react'\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App'\nimport {HashRouter} from \"react-router-dom\"\nimport {Provider} from \"react-redux\"\n\n// setInterval(() => {\n// \tstore.dispatch({type: \"FAKE\"})\n// }, 1000)\n\nReactDOM.render(\n\t\t// <React.StrictMode>\n  \t\t\t<HashRouter>\n        \t\t<Provider store={store}>\n    \t\t\t\t<App />\n        \t\t</Provider>       \n  \t\t\t</HashRouter>,\t\n\t\t// </React.StrictMode>\n\t\tdocument.getElementById('root'))\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1eSTO\",\"navItems\":\"Navbar_navItems__iJlVs\",\"item\":\"Navbar_item__3vlnp\",\"big\":\"Navbar_big__1NryQ\",\"active\":\"Navbar_active__1_Th5\",\"friendsTitle\":\"Navbar_friendsTitle__U3D9E\",\"friends\":\"Navbar_friends__1Fs1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2PqNN\",\"input\":\"Login_input__1zv1l\",\"checkbox\":\"Login_checkbox__3TIh9\",\"buttonBlock\":\"Login_buttonBlock__4izJ_\",\"button\":\"Login_button__20GjB\",\"submitError\":\"Login_submitError__3IFUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__1n4Bx\",\"selectedPage\":\"Paginator_selectedPage__3l_X5\",\"common\":\"Paginator_common__uHIKM\"};"," export const required= value => {\r\n\t\r\n\tif (value) return undefined\r\n\treturn \"Field is required\"\t\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\t\treturn undefined\r\n}","export default __webpack_public_path__ + \"static/media/usersLoader.edd5afcb.svg\";","\r\nimport preloader from \"../../../assets/images/usersLoader.svg\"\r\n\r\n\r\nfunction Preloader(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<img src={preloader} alt=\"\" />\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Friend_image__2lBlC\",\"name\":\"Friend_name__1sZzq\",\"item\":\"Friend_item__2u_U7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Header_login__2gCw8\",\"login_link\":\"Header_login_link__2xKot\",\"logo\":\"Header_logo__2aSeR\"};"],"sourceRoot":""}